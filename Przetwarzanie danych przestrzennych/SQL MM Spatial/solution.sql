-- 1.A
select lpad('-',2*(level-1),'|-') || t.owner||'.'||t.type_name||' (FINAL:'||t.final||
', INSTANTIABLE:'||t.instantiable||', ATTRIBUTES:'||t.attributes||', METHODS:'||t.methods||')'
from all_types t
start with t.type_name = 'ST_GEOMETRY'
connect by prior t.type_name = t.supertype_name
 and prior t.owner = t.owner;
 
-- 1.B
select distinct m.method_name
from all_type_methods m
where m.type_name like 'ST_POLYGON'
and m.owner = 'MDSYS'
order by 1;

-- 1.C
CREATE TABLE MYST_MAJOR_CITIES (
    FIPS_CNTRY VARCHAR2(2),
    CITY_NAME VARCHAR2(40),
    STGEOM ST_POINT
);

-- 1.D
INSERT INTO MYST_MAJOR_CITIES
SELECT C.FIPS_CNTRY, C.CITY_NAME,
TREAT(ST_POINT.FROM_SDO_GEOM(C.GEOM) AS ST_POINT) STGEOM
FROM MAJOR_CITIES C;

-- 2.A
INSERT INTO MYST_MAJOR_CITIES VALUES
('PL', 'Szczyrk', NEW ST_Point (19.036107, 49.718655));

-- 3.A
CREATE TABLE MYST_COUNTRY_BOUNDARIES (
    FIPS_CNTRY VARCHAR2(2),
    CNTRY_NAME VARCHAR2(40),
    STGEOM ST_GEOMETRY
);

-- 3.B
INSERT INTO MYST_COUNTRY_BOUNDARIES
SELECT C.FIPS_CNTRY, C.CNTRY_NAME, ST_MULTIPOLYGON(C.GEOM) STGEOM
FROM COUNTRY_BOUNDARIES C;

-- 3.C
SELECT ST_GEOMETRY.ST_GEOMETRYTYPE(C.STGEOM) AS TYP_OBIEKTU, COUNT(*) AS ILE
FROM MYST_COUNTRY_BOUNDARIES C GROUP BY ST_GEOMETRY.ST_GEOMETRYTYPE(C.STGEOM);

-- 3.D
SELECT C.STGEOM.ST_ISSIMPLE() FROM MYST_COUNTRY_BOUNDARIES C;

-- 4.A
DELETE FROM MYST_MAJOR_CITIES WHERE CITY_NAME = 'Szczyrk';

SELECT B.CNTRY_NAME, COUNT(*)
FROM MYST_COUNTRY_BOUNDARIES B, MYST_MAJOR_CITIES C
WHERE B.STGEOM.ST_CONTAINS(C.STGEOM) = 1 GROUP BY B.CNTRY_NAME;

-- 4.B
SELECT A.CNTRY_NAME A_NAME, B.CNTRY_NAME B_NAME
FROM MYST_COUNTRY_BOUNDARIES A, MYST_COUNTRY_BOUNDARIES B
WHERE  B.CNTRY_NAME = 'Czech Republic' AND A.STGEOM.ST_TOUCHES(B.STGEOM) = 1;

-- 4.C
SELECT DISTINCT B.CNTRY_NAME, R.NAME 
FROM MYST_COUNTRY_BOUNDARIES B, RIVERS R 
WHERE B.CNTRY_NAME = 'Czech Republic' AND B.STGEOM.ST_CROSSES(ST_LINESTRING(R.GEOM)) = 1;

-- 4.D
SELECT ROUND(SUM(B.STGEOM.ST_AREA()), -2) POWIERZCHNIA 
FROM MYST_COUNTRY_BOUNDARIES B 
WHERE  B.cntry_name IN ('Czech Republic', 'Slovakia');

-- 4.E.
SELECT B.STGEOM OBIEKT, B.STGEOM.ST_DIFFERENCE(ST_GEOMETRY(W.GEOM)).ST_GEOMETRYTYPE() WEGRY_BEZ
FROM MYST_COUNTRY_BOUNDARIES B, WATER_BODIES W 
WHERE B.CNTRY_NAME = 'Hungary' AND W.NAME = 'Balaton';

-- 5.A
EXPLAIN PLAN FOR
SELECT B.CNTRY_NAME COUNTRY, COUNT(*)
FROM MYST_COUNTRY_BOUNDARIES B, MYST_MAJOR_CITIES C
WHERE SDO_WITHIN_DISTANCE(C.STGEOM, B.STGEOM, 'distance=100 unit=km') = 'TRUE' AND B.cntry_name = 'Poland' GROUP BY B.CNTRY_NAME;

SELECT plan_table_output FROM table(dbms_xplan.display('plan_table', null, 'basic'));

-- 5.B
INSERT INTO USER_SDO_GEOM_METADATA
SELECT 'MYST_MAJOR_CITIES', 'STGEOM',
T.DIMINFO, T.SRID
FROM ALL_SDO_GEOM_METADATA T
WHERE T.TABLE_NAME = 'MAJOR_CITIES';

--5.C
CREATE INDEX MYST_MAJOR_CITIES_IDX ON MYST_MAJOR_CITIES(STGEOM) INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;

--5.D
EXPLAIN PLAN FOR
SELECT B.CNTRY_NAME COUNTRY, COUNT(*)
FROM MYST_COUNTRY_BOUNDARIES B, MYST_MAJOR_CITIES C
WHERE SDO_WITHIN_DISTANCE(C.STGEOM, B.STGEOM, 'distance=100 unit=km') = 'TRUE' AND B.cntry_name = 'Poland' GROUP BY B.CNTRY_NAME;

SELECT plan_table_output FROM table(dbms_xplan.display('plan_table', null, 'basic'));
-- --------------------------------------------------------
-- | Id  | Operation            | Name                    |
-- --------------------------------------------------------
-- |   0 | SELECT STATEMENT     |                         |
-- |   1 |  SORT GROUP BY NOSORT|                         |
-- |   2 |   NESTED LOOPS       |                         |
-- |   3 |    TABLE ACCESS FULL | MYST_COUNTRY_BOUNDARIES |
-- |   4 |    DOMAIN INDEX      | MYST_MAJOR_CITIES_IDX   |
-- --------------------------------------------------------
